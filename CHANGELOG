The wiring inside the wooden node box next to the workbench Mega
09-17-16  I rebuilt the data line to pin six for the PWM lighting experiments.  A purple dupont connection on the Mega to 
to striped blue to yellow lead of 5 wire tstat cable
the yellow wire then goes to the wooden fuse box above the doorway (fuses e - h .) and connects to the whiteorange wire of the 12wire gray data cable.
the whiteorange wire then goes to the power source switch box where it connects to the gate wire of the MOSFET circuit.

some existing wiring info
Mega wiring:
black eight wire cable (old ethernet cable)
solid brown to digital #2 
digital #3 to solid orange to (orange lead of 8 wire....
digital #4 to solid green to (white lead of 5 wire brown tstat cable in local box) to 
	   (fuse e through h box -add wire color here-)
digital #5 to solid blue to (yellow lead of 8 wire brown t-stat cable....
digital #6 purple to striped blue to yellow lead of 5 wire tstat cable
digital #8 green to striped green of black ethernet cable to light green wire in the brown 8 wire tstat cable
           From light green wire in metal box above back door to green striped wire in the gray 8 wire
	   ethernet cable.  From handy box with light controls: striped green to white in the black 4 wire
	   USB cable.
digital #9 orange to striped orange of black ethernet cable to dark green wire in the brown 5 wire tstat 	    cable. From dark green wire in metal box above back door to green solid in the gray 8 wire 		   ethernet cable - From handy box with light controls: solid green to the solid green in the black 		   4 wire USB cable.               
           analog #1 yellow to striped brown

11.24.2017
Begining the rewrite of "Workbench_Mega"

11.27.2017
Repaired Main Loop to allow for rollover safe function for my500msLoopfunction()
Added voltage averaging in fast main loop part of program.  Calibrated voltage.

11.28.2017
Adding voltage compensation code to the track light dimmer.  I want to prevent those lights
from exceeding 12vdc.  I think the high charging rail voltage is damaging the bulbs.

11.30.2017
I am changing the way the RTC clock is read and used to end dependence on constant updates.

12.1.2017
I created (tmElements_t  current_microcontroller_time) and I am updating it every second.
This will replace all the calls to the external clock for the functions that still rely on
the current long time format.

12.2.2017
I timed the difference in the clock on the Arduino Mega against the RTC module.  The Arduino
was almost 36 seconds slower after only 6 hours!  I had the idea to update the clock at midnight,
but I guess I'll have to update every second.

12.3.2017
I made repairs to the message manager function.  It needed independent timing.  It still needs
attention

12.4.2017
I finished wiring up the AUX power wiring.  Begining a new function myAuxPowerfunction()and
myTestForMorningBatteryChargefunction()

12.5.2017
Improvements to sunrise / sunset variables

1.5.2018
New batteries!  4 x 100AH

BATTERY BENCHMARKS
START 13.3V  9:41 315WATTS OUT 84 IN 9:43 DROPPED TO 12.4 PRETTY QUICKLY, faster than i expected

1.6.2018
9:54:00 TO 9:55:30 READ 12.4 AT MONITOR, THEY JUMPED BACK TO 12.7, THEN .8 PRetty quickly mebbe 400 watts 

2.16.2018
I'm working on a two stage circuit swapping system for breakers 4 and 8 here in the workshop.


2.26.2018
I want to restructure the modes to make linear sense
mode 0 sleep =  aux power on
mode 1 wake  =  aux power off for x minutes to let batteries settle
idea:  a function that takes these parameters (min/max voltage allowable time min/max) 
       from one of the mode routines, and returns a number when the condition has been met.


5.1.2018 first object written!  MyTimer

5.8.2018 Trying to implement a "state machine"
5.11.2018  Success!  a machine with 16 states of being.  I'll be able to cut out a whole lot of
           spaghetti code now.
           
03-11-19 created GitLab Repository.  I had trouble with my daylight savings time change this year.  I will now apply my new knowledge of C++ to refactor this code.

03-11-19-10:28 create changelog, added update script
03-11-19-11:02 combined old project files
03-11-19-11:17 moving workbench_lighting_MOSFET_signal_pin to pin 10 due to a broken pin in the Arduino Mega pin 6 slot
03-11-19-11:23 moving battery_charger_signal_pin from pin 4 to pin 11 to address a possible bad transitor
03-11-19-11:53 myTimer initial refactor
03-11-19-12:01 localize time library
03-11-19-12:03 added library files
03-12-19-10:24 repaired *char warnings and created MyLCD class
03-12-19-10:55 added Jons birthday
03-12-19-11:00 add class MyStateMachine and class MyImportantDates
03-12-19-12:38 initialization list experiment
03-12-19-18:26 removed library version numbers from folders for compatibility with Linux Arduino
03-12-19-18:55 rebuilt important dates array
03-13-19-12:03 added access control and made mCounter private
03-13-19-19:09 mySerial construction
03-14-19-09:44 RTC refactoring
03-14-19-09:57 MySerial::printTimestamp()
03-14-19-10:20 MySerial::testClock()
03-14-19-10:46 machine states enumerated
03-14-19-10:54 MyStateMachine::State MyStateMachine::getState()
03-14-19-11:11 main loop states enumerated
03-14-19-11:24 old wiring comments moved to CHANGELOG
03-14-19-11:39 gAllowOvernightMaintenance safeguard added
03-14-19-11:45 added MyStateMachine::setState
03-14-19-12:32 added state enumerations to old state functions
03-14-19-17:50 added experimental code to time loop more accuratly
03-14-19-18:06 new timing allowed some safety hacks to be removed
03-14-19-18:51 add MyInfo and rebuilt printState there
03-15-19-10:41 moved printClock and updateBacklight into MyLCD and refactored.
03-15-19-11:35 MyLCD.printDate
03-15-19-11:46 crash fix attempt
03-15-19-12:00 crash isolated, send fix
03-15-19-12:09 crash isolated, send fix2
03-15-19-12:37 noted voltmeter response too slow, raising initial voltage to above battery charger cut in point to avoid high voltage cut out until volt sensor code is rebuilt
03-15-19-18:57 add class Voltmeter and began refactoring old functions
03-16-19-18:47 voltmeter math commentary and expansion
03-17-19-07:20 voltmeter code testing
03-17-19-07:25 voltmeter code testing2
03-17-19-07:28 voltmeter code testing3
03-17-19-11:55 removed MyInfo class
03-17-19-12:03 added overloaded sprint (float) to MySerial
03-17-19-16:45 moved pin variables to Pin namespace, renamed
03-17-19-17:06 described Voltmeter stabilizing code
03-17-19-19:03 add Calendar::getWeekNumber
03-19-19-07:57 myserial.setStatusString
03-19-19-09:57 simplified state printing
03-19-19-11:21 Voltmeter::VoltRecord
03-19-19-18:40 calendar.loadImportantDates()
03-19-19-19:04 calendar.loadImportantDates() bugfix
03-19-19-19:07 calendar.loadImportantDates() bugfix
03-20-19-09:43 Calendar::serialPrintImportantDate
03-20-19-10:07 Calendar::getDaySuffix
03-20-19-18:34 MessageManager::main()
03-20-19-19:09 moved printLDR to MyLCD
03-21-19-17:58 Calendar::getQtyImportantDates
03-21-19-18:33 Calendar::getImportantDate
03-21-19-18:55 MyLCD::printImportantDate
03-21-19-19:04 MessageManager diagnostics
03-22-19-09:20 mLaptopOperatingVoltage concept
03-22-19-10:11 MySerial::checkInput() and MySerial::usingLaptopOperatingVoltage()
03-22-19-10:26 calibrate laptop operating voltage
03-22-19-11:03 began passing important dates as pointers
03-22-19-11:34 mDatesToReportList loading
03-22-19-11:58 sizeof experiment, and got passing constant pointers working
03-22-19-19:14 String remove experiment
03-23-19-18:49 String object testing
03-24-19-09:46 MyLCD::printImportantDate format
03-24-19-10:11 MyLCD::printImportantDate format
03-24-19-12:00 MyLCD::printImportantDate bottom
03-24-19-12:45 MyLCD::printImportantDate bottom 2
03-24-19-12:50 MyLCD::printImportantDate bottom 3
03-24-19-17:47 MessageManager begin system status messages
03-24-19-18:25 MessageManager::voltageRecordMessage()
03-24-19-19:01 windows segfault repair attempt
03-24-19-19:05 windows segfault repair complete
03-25-19-08:54 Calendar::isAM
03-25-19-08:54 Calendar::isAM
03-25-19-09:19 Calendar::getMyClockFormat
03-25-19-10:09 MessageManager::voltageRecordMessage updated
03-25-19-10:18 MessageManager::voltageRecordMessage updated
03-25-19-11:44 old state machine functions refactored and moved to myStateMachine
03-25-19-18:42 all sunrise sunset tables and critical functions moved to calendar
03-25-19-19:02 constructed timed loop for message dissolves
03-26-19-10:07 dissolve effect built
03-26-19-10:54 sunrise sunset tables modified from DST to not DST (daylight savings time)
03-26-19-11:19 sunrise sunset message
03-26-19-11:36 sunset time fix
03-26-19-17:44 MyStateMachine::getInverterRunTime
03-26-19-18:28 messageInverterRunTime()
03-26-19-18:34 made MessageManager function names more uniform
03-26-19-18:48 messageInverterRunTime() removed minute info for round hours
03-26-19-18:51 messageInverterRunTime() removed minute info for round hours
03-27-19-07:36 Calendar::getDaySuffix condensed
03-27-19-07:42 rm Calendar::serialPrintImportantDate - redundant
03-27-19-11:37 added Tracklight class and methods
03-27-19-11:50 add Tracklight diagnostics
03-27-19-11:56 add Tracklight diagnostics
03-27-19-12:02 add Tracklight diagnostics
03-27-19-18:18 completed TrackLight
03-27-19-19:02 create Timing class
03-28-19-09:25 constrained TrackLight output
03-28-19-10:16 2AM loop timing
03-28-19-11:10 serial input experiment
03-28-19-11:44 change clock with serial command experiment
03-28-19-11:54 complete set clock from serial
03-28-19-19:05 added Calendar::isDaylightSavingsTime
03-29-19-10:03 added Calendar::get1stMonthlyOccurence
03-29-19-10:24 Calendar::get1stMonthlyOccurence testing
03-29-19-11:43 Calendar::DST testing, added * to indicate DST modification
03-29-19-12:02 Calendar::DST testing activated serial hour, second change commands
03-29-19-18:28 Calendar::getClockString DST indicator refinement
03-29-19-18:44 time library nextSunday experiment
03-29-19-18:46 removed old diagnostic line
03-30-19-18:49 refactored Calendar::isDaylightSavingsTime
03-31-19-11:56 bugfix Timing::isIt2AM()
03-31-19-19:08 added commands to change day, month and year from serial monitor
04-01-19-09:28 MySerial::checkForUserInput added feedback
04-01-19-10:18 fix MyLCD end of month tomorrow bug
04-01-19-10:59 added MySerial::printFullDateTime
04-01-19-12:33 added Calendar::daylightSavingCheck()
04-01-19-13:16 clock sync and calendar.init added to manual time adjustments
04-01-19-18:49 fixed incorrect events after manual time change
04-01-19-19:09 fixed incorrect sunrise/sunsets after manual time change
04-01-19-19:13 fixed incorrect sunrise/sunsets after manual time change2
04-01-19-19:43 fixed today events not appearing after resets
04-02-19-09:43 Calendar refactor
04-02-19-10:56 + MyLCD::printStateChangeDelayCounter
04-02-19-11:05 Timing refactor
04-02-19-11:53 MessageManager refactor
04-02-19-11:58 MyLCD::printImportantDate today diagnostics
04-02-19-18:52 moved RTC readings into Clock
04-02-19-19:04 add Clock::getHour
04-02-19-19:08 add Clock::getMinute  Clock::getSecond
04-03-19-08:59 add Clock::getYear  Clock::getMonth Clock::getDay
04-03-19-09:07 renamed Clock:: to TimeNow for clarity
04-03-19-09:13 updated program to use new TimeNow::Get... methods
04-03-19-09:19 changed all {0} to {} (redundant)
04-03-19-09:51 MySerial::printFullDateTime repaired time section
04-03-19-11:01 replaced DST logic with simpler model
04-03-19-11:20 nightly maintenance moved from 2AM to 4AM to avoid DST logic
04-03-19-18:47 rewrote VoltMeter description for clarity
04-03-19-18:53 MyStateMachine::setState deployed Strings and F() macros
04-03-19-18:59 MyStateMachine proofreading
04-03-19-19:00 MyStateMachine proofreading
04-04-19-09:35 TimeNow: add mLastTimestamp and access methods.  Begin elimination of Time library functions that require setTime
04-04-19-09:47 now() updated to timenow.getNow()
04-04-19-10:13 added myString and began moving in String related functions and methods
04-04-19-11:33 added MyString::get24Clock
04-04-19-12:08 added MyString::get12Clock
04-04-19-12:38 Calendar::isDaylight updated
04-04-19-12:50 eliminated calls to Time library hour(), day()......
04-04-19-18:08 MyString::get24Clock repaired missing return
04-04-19-18:43 MyLCD::printImportantDate add diagnostic code to event year
04-04-19-18:48 MyLCD::printImportantDate deploy year repair
04-04-19-19:03 add Calendar::initDST()
04-04-19-19:04 add Calendar::initDST()
